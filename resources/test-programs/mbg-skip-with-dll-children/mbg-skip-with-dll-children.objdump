
mbg-skip-with-dll-children/mbg-skip-with-dll-children:     file format elf64-x86-64


Disassembly of section .init:

0000000000400488 <_init>:
  400488:	48 83 ec 08          	sub    $0x8,%rsp
  40048c:	48 8b 05 65 0b 20 00 	mov    0x200b65(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  400493:	48 85 c0             	test   %rax,%rax
  400496:	74 05                	je     40049d <_init+0x15>
  400498:	e8 53 00 00 00       	callq  4004f0 <__gmon_start__@plt>
  40049d:	48 83 c4 08          	add    $0x8,%rsp
  4004a1:	c3                   	retq   

Disassembly of section .plt:

00000000004004b0 <puts@plt-0x10>:
  4004b0:	ff 35 52 0b 20 00    	pushq  0x200b52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004b6:	ff 25 54 0b 20 00    	jmpq   *0x200b54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004c0 <puts@plt>:
  4004c0:	ff 25 52 0b 20 00    	jmpq   *0x200b52(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004c6:	68 00 00 00 00       	pushq  $0x0
  4004cb:	e9 e0 ff ff ff       	jmpq   4004b0 <_init+0x28>

00000000004004d0 <printf@plt>:
  4004d0:	ff 25 4a 0b 20 00    	jmpq   *0x200b4a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004d6:	68 01 00 00 00       	pushq  $0x1
  4004db:	e9 d0 ff ff ff       	jmpq   4004b0 <_init+0x28>

00000000004004e0 <__libc_start_main@plt>:
  4004e0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004e6:	68 02 00 00 00       	pushq  $0x2
  4004eb:	e9 c0 ff ff ff       	jmpq   4004b0 <_init+0x28>

00000000004004f0 <__gmon_start__@plt>:
  4004f0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004f6:	68 03 00 00 00       	pushq  $0x3
  4004fb:	e9 b0 ff ff ff       	jmpq   4004b0 <_init+0x28>

0000000000400500 <malloc@plt>:
  400500:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400506:	68 04 00 00 00       	pushq  $0x4
  40050b:	e9 a0 ff ff ff       	jmpq   4004b0 <_init+0x28>

0000000000400510 <exit@plt>:
  400510:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400516:	68 05 00 00 00       	pushq  $0x5
  40051b:	e9 90 ff ff ff       	jmpq   4004b0 <_init+0x28>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 00 0a 40 00 	mov    $0x400a00,%r8
  400536:	48 c7 c1 90 09 40 00 	mov    $0x400990,%rcx
  40053d:	48 c7 c7 f5 07 40 00 	mov    $0x4007f5,%rdi
  400544:	e8 97 ff ff ff       	callq  4004e0 <__libc_start_main@plt>
  400549:	f4                   	hlt    
  40054a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400550 <deregister_tm_clones>:
  400550:	b8 77 10 60 00       	mov    $0x601077,%eax
  400555:	55                   	push   %rbp
  400556:	48 2d 70 10 60 00    	sub    $0x601070,%rax
  40055c:	48 83 f8 0e          	cmp    $0xe,%rax
  400560:	48 89 e5             	mov    %rsp,%rbp
  400563:	77 02                	ja     400567 <deregister_tm_clones+0x17>
  400565:	5d                   	pop    %rbp
  400566:	c3                   	retq   
  400567:	b8 00 00 00 00       	mov    $0x0,%eax
  40056c:	48 85 c0             	test   %rax,%rax
  40056f:	74 f4                	je     400565 <deregister_tm_clones+0x15>
  400571:	5d                   	pop    %rbp
  400572:	bf 70 10 60 00       	mov    $0x601070,%edi
  400577:	ff e0                	jmpq   *%rax
  400579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400580 <register_tm_clones>:
  400580:	b8 70 10 60 00       	mov    $0x601070,%eax
  400585:	55                   	push   %rbp
  400586:	48 2d 70 10 60 00    	sub    $0x601070,%rax
  40058c:	48 c1 f8 03          	sar    $0x3,%rax
  400590:	48 89 e5             	mov    %rsp,%rbp
  400593:	48 89 c2             	mov    %rax,%rdx
  400596:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40059a:	48 01 d0             	add    %rdx,%rax
  40059d:	48 d1 f8             	sar    %rax
  4005a0:	75 02                	jne    4005a4 <register_tm_clones+0x24>
  4005a2:	5d                   	pop    %rbp
  4005a3:	c3                   	retq   
  4005a4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005a9:	48 85 d2             	test   %rdx,%rdx
  4005ac:	74 f4                	je     4005a2 <register_tm_clones+0x22>
  4005ae:	5d                   	pop    %rbp
  4005af:	48 89 c6             	mov    %rax,%rsi
  4005b2:	bf 70 10 60 00       	mov    $0x601070,%edi
  4005b7:	ff e2                	jmpq   *%rdx
  4005b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005c0 <__do_global_dtors_aux>:
  4005c0:	80 3d a5 0a 20 00 00 	cmpb   $0x0,0x200aa5(%rip)        # 60106c <_edata>
  4005c7:	75 11                	jne    4005da <__do_global_dtors_aux+0x1a>
  4005c9:	55                   	push   %rbp
  4005ca:	48 89 e5             	mov    %rsp,%rbp
  4005cd:	e8 7e ff ff ff       	callq  400550 <deregister_tm_clones>
  4005d2:	5d                   	pop    %rbp
  4005d3:	c6 05 92 0a 20 00 01 	movb   $0x1,0x200a92(%rip)        # 60106c <_edata>
  4005da:	f3 c3                	repz retq 
  4005dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005e0 <frame_dummy>:
  4005e0:	48 83 3d 38 08 20 00 	cmpq   $0x0,0x200838(%rip)        # 600e20 <__JCR_END__>
  4005e7:	00 
  4005e8:	74 1e                	je     400608 <frame_dummy+0x28>
  4005ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ef:	48 85 c0             	test   %rax,%rax
  4005f2:	74 14                	je     400608 <frame_dummy+0x28>
  4005f4:	55                   	push   %rbp
  4005f5:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4005fa:	48 89 e5             	mov    %rsp,%rbp
  4005fd:	ff d0                	callq  *%rax
  4005ff:	5d                   	pop    %rbp
  400600:	e9 7b ff ff ff       	jmpq   400580 <register_tm_clones>
  400605:	0f 1f 00             	nopl   (%rax)
  400608:	e9 73 ff ff ff       	jmpq   400580 <register_tm_clones>

000000000040060d <create_lvl>:
  40060d:	55                   	push   %rbp
  40060e:	48 89 e5             	mov    %rsp,%rbp
  400611:	48 83 ec 30          	sub    $0x30,%rsp
  400615:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400618:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40061f:	00 
  400620:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400627:	00 
  400628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40062c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400630:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  400634:	7e 6f                	jle    4006a5 <create_lvl+0x98>
  400636:	bf 18 00 00 00       	mov    $0x18,%edi
  40063b:	e8 c0 fe ff ff       	callq  400500 <malloc@plt>
  400640:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400644:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400649:	75 0a                	jne    400655 <create_lvl+0x48>
  40064b:	bf 01 00 00 00       	mov    $0x1,%edi
  400650:	e8 bb fe ff ff       	callq  400510 <exit@plt>
  400655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400659:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40065d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  400664:	eb 37                	jmp    40069d <create_lvl+0x90>
  400666:	bf 18 00 00 00       	mov    $0x18,%edi
  40066b:	e8 90 fe ff ff       	callq  400500 <malloc@plt>
  400670:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400674:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400679:	75 0a                	jne    400685 <create_lvl+0x78>
  40067b:	bf 01 00 00 00       	mov    $0x1,%edi
  400680:	e8 8b fe ff ff       	callq  400510 <exit@plt>
  400685:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400689:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40068d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  400691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400695:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400699:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  40069d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4006a0:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  4006a3:	7c c1                	jl     400666 <create_lvl+0x59>
  4006a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006a9:	c9                   	leaveq 
  4006aa:	c3                   	retq   

00000000004006ab <forward_to_item>:
  4006ab:	55                   	push   %rbp
  4006ac:	48 89 e5             	mov    %rsp,%rbp
  4006af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4006b3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4006b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006be:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4006c5:	eb 10                	jmp    4006d7 <forward_to_item+0x2c>
  4006c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006cb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4006cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006d3:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4006d7:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4006da:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4006dd:	7c e8                	jl     4006c7 <forward_to_item+0x1c>
  4006df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006e3:	5d                   	pop    %rbp
  4006e4:	c3                   	retq   

00000000004006e5 <conn_two_lvls>:
  4006e5:	55                   	push   %rbp
  4006e6:	48 89 e5             	mov    %rsp,%rbp
  4006e9:	48 83 ec 40          	sub    $0x40,%rsp
  4006ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4006f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4006f5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4006f9:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  4006fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400700:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400704:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40070b:	00 
  40070c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  400713:	eb 78                	jmp    40078d <conn_two_lvls+0xa8>
  400715:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400718:	48 98                	cltq   
  40071a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  400721:	00 
  400722:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400726:	48 01 d0             	add    %rdx,%rax
  400729:	8b 10                	mov    (%rax),%edx
  40072b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40072e:	89 c6                	mov    %eax,%esi
  400730:	bf 18 0a 40 00       	mov    $0x400a18,%edi
  400735:	b8 00 00 00 00       	mov    $0x0,%eax
  40073a:	e8 91 fd ff ff       	callq  4004d0 <printf@plt>
  40073f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400742:	48 98                	cltq   
  400744:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40074b:	00 
  40074c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400750:	48 01 d0             	add    %rdx,%rax
  400753:	8b 10                	mov    (%rax),%edx
  400755:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400759:	89 d6                	mov    %edx,%esi
  40075b:	48 89 c7             	mov    %rax,%rdi
  40075e:	e8 48 ff ff ff       	callq  4006ab <forward_to_item>
  400763:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400767:	bf 47 0a 40 00       	mov    $0x400a47,%edi
  40076c:	e8 4f fd ff ff       	callq  4004c0 <puts@plt>
  400771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400775:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400779:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40077d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400781:	48 8b 40 08          	mov    0x8(%rax),%rax
  400785:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400789:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  40078d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400790:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  400793:	7c 80                	jl     400715 <conn_two_lvls+0x30>
  400795:	c9                   	leaveq 
  400796:	c3                   	retq   

0000000000400797 <create_dll>:
  400797:	55                   	push   %rbp
  400798:	48 89 e5             	mov    %rsp,%rbp
  40079b:	48 83 ec 20          	sub    $0x20,%rsp
  40079f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4007a3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4007a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4007ad:	eb 3c                	jmp    4007eb <create_dll+0x54>
  4007af:	bf 10 00 00 00       	mov    $0x10,%edi
  4007b4:	e8 47 fd ff ff       	callq  400500 <malloc@plt>
  4007b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4007bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4007c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4007c5:	48 89 10             	mov    %rdx,(%rax)
  4007c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4007d0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4007d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007d8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4007df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007e3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4007e7:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4007eb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4007ee:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4007f1:	7c bc                	jl     4007af <create_dll+0x18>
  4007f3:	c9                   	leaveq 
  4007f4:	c3                   	retq   

00000000004007f5 <main>:
  4007f5:	55                   	push   %rbp
  4007f6:	48 89 e5             	mov    %rsp,%rbp
  4007f9:	48 83 ec 30          	sub    $0x30,%rsp
  4007fd:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400800:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  400804:	be 02 00 00 00       	mov    $0x2,%esi
  400809:	bf 58 0a 40 00       	mov    $0x400a58,%edi
  40080e:	b8 00 00 00 00       	mov    $0x0,%eax
  400813:	e8 b8 fc ff ff       	callq  4004d0 <printf@plt>
  400818:	bf 02 00 00 00       	mov    $0x2,%edi
  40081d:	e8 eb fd ff ff       	callq  40060d <create_lvl>
  400822:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400826:	be 03 00 00 00       	mov    $0x3,%esi
  40082b:	bf 80 0a 40 00       	mov    $0x400a80,%edi
  400830:	b8 00 00 00 00       	mov    $0x0,%eax
  400835:	e8 96 fc ff ff       	callq  4004d0 <printf@plt>
  40083a:	bf 03 00 00 00       	mov    $0x3,%edi
  40083f:	e8 c9 fd ff ff       	callq  40060d <create_lvl>
  400844:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400848:	bf a4 0a 40 00       	mov    $0x400aa4,%edi
  40084d:	e8 6e fc ff ff       	callq  4004c0 <puts@plt>
  400852:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40085a:	b9 02 00 00 00       	mov    $0x2,%ecx
  40085f:	ba 58 10 60 00       	mov    $0x601058,%edx
  400864:	48 89 c7             	mov    %rax,%rdi
  400867:	e8 79 fe ff ff       	callq  4006e5 <conn_two_lvls>
  40086c:	be 04 00 00 00       	mov    $0x4,%esi
  400871:	bf c0 0a 40 00       	mov    $0x400ac0,%edi
  400876:	b8 00 00 00 00       	mov    $0x0,%eax
  40087b:	e8 50 fc ff ff       	callq  4004d0 <printf@plt>
  400880:	bf 04 00 00 00       	mov    $0x4,%edi
  400885:	e8 83 fd ff ff       	callq  40060d <create_lvl>
  40088a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40088e:	bf e3 0a 40 00       	mov    $0x400ae3,%edi
  400893:	e8 28 fc ff ff       	callq  4004c0 <puts@plt>
  400898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40089c:	48 8b 40 10          	mov    0x10(%rax),%rax
  4008a0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  4008a4:	b9 03 00 00 00       	mov    $0x3,%ecx
  4008a9:	ba 60 10 60 00       	mov    $0x601060,%edx
  4008ae:	48 89 c7             	mov    %rax,%rdi
  4008b1:	e8 2f fe ff ff       	callq  4006e5 <conn_two_lvls>
  4008b6:	bf ff 0a 40 00       	mov    $0x400aff,%edi
  4008bb:	e8 00 fc ff ff       	callq  4004c0 <puts@plt>
  4008c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4008c4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4008c8:	bf 10 00 00 00       	mov    $0x10,%edi
  4008cd:	e8 2e fc ff ff       	callq  400500 <malloc@plt>
  4008d2:	48 89 c2             	mov    %rax,%rdx
  4008d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008d9:	48 89 10             	mov    %rdx,(%rax)
  4008dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008e0:	48 8b 00             	mov    (%rax),%rax
  4008e3:	be 02 00 00 00       	mov    $0x2,%esi
  4008e8:	48 89 c7             	mov    %rax,%rdi
  4008eb:	e8 a7 fe ff ff       	callq  400797 <create_dll>
  4008f0:	bf 14 0b 40 00       	mov    $0x400b14,%edi
  4008f5:	e8 c6 fb ff ff       	callq  4004c0 <puts@plt>
  4008fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008fe:	48 8b 40 08          	mov    0x8(%rax),%rax
  400902:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400906:	bf 10 00 00 00       	mov    $0x10,%edi
  40090b:	e8 f0 fb ff ff       	callq  400500 <malloc@plt>
  400910:	48 89 c2             	mov    %rax,%rdx
  400913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400917:	48 89 10             	mov    %rdx,(%rax)
  40091a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40091e:	48 8b 00             	mov    (%rax),%rax
  400921:	be 01 00 00 00       	mov    $0x1,%esi
  400926:	48 89 c7             	mov    %rax,%rdi
  400929:	e8 69 fe ff ff       	callq  400797 <create_dll>
  40092e:	bf 2a 0b 40 00       	mov    $0x400b2a,%edi
  400933:	e8 88 fb ff ff       	callq  4004c0 <puts@plt>
  400938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40093c:	48 8b 40 08          	mov    0x8(%rax),%rax
  400940:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400948:	48 8b 40 08          	mov    0x8(%rax),%rax
  40094c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400950:	bf 10 00 00 00       	mov    $0x10,%edi
  400955:	e8 a6 fb ff ff       	callq  400500 <malloc@plt>
  40095a:	48 89 c2             	mov    %rax,%rdx
  40095d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400961:	48 89 10             	mov    %rdx,(%rax)
  400964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400968:	48 8b 00             	mov    (%rax),%rax
  40096b:	be 01 00 00 00       	mov    $0x1,%esi
  400970:	48 89 c7             	mov    %rax,%rdi
  400973:	e8 1f fe ff ff       	callq  400797 <create_dll>
  400978:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40097f:	00 
  400980:	b8 00 00 00 00       	mov    $0x0,%eax
  400985:	c9                   	leaveq 
  400986:	c3                   	retq   
  400987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40098e:	00 00 

0000000000400990 <__libc_csu_init>:
  400990:	41 57                	push   %r15
  400992:	41 89 ff             	mov    %edi,%r15d
  400995:	41 56                	push   %r14
  400997:	49 89 f6             	mov    %rsi,%r14
  40099a:	41 55                	push   %r13
  40099c:	49 89 d5             	mov    %rdx,%r13
  40099f:	41 54                	push   %r12
  4009a1:	4c 8d 25 68 04 20 00 	lea    0x200468(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4009a8:	55                   	push   %rbp
  4009a9:	48 8d 2d 68 04 20 00 	lea    0x200468(%rip),%rbp        # 600e18 <__init_array_end>
  4009b0:	53                   	push   %rbx
  4009b1:	4c 29 e5             	sub    %r12,%rbp
  4009b4:	31 db                	xor    %ebx,%ebx
  4009b6:	48 c1 fd 03          	sar    $0x3,%rbp
  4009ba:	48 83 ec 08          	sub    $0x8,%rsp
  4009be:	e8 c5 fa ff ff       	callq  400488 <_init>
  4009c3:	48 85 ed             	test   %rbp,%rbp
  4009c6:	74 1e                	je     4009e6 <__libc_csu_init+0x56>
  4009c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4009cf:	00 
  4009d0:	4c 89 ea             	mov    %r13,%rdx
  4009d3:	4c 89 f6             	mov    %r14,%rsi
  4009d6:	44 89 ff             	mov    %r15d,%edi
  4009d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4009dd:	48 83 c3 01          	add    $0x1,%rbx
  4009e1:	48 39 eb             	cmp    %rbp,%rbx
  4009e4:	75 ea                	jne    4009d0 <__libc_csu_init+0x40>
  4009e6:	48 83 c4 08          	add    $0x8,%rsp
  4009ea:	5b                   	pop    %rbx
  4009eb:	5d                   	pop    %rbp
  4009ec:	41 5c                	pop    %r12
  4009ee:	41 5d                	pop    %r13
  4009f0:	41 5e                	pop    %r14
  4009f2:	41 5f                	pop    %r15
  4009f4:	c3                   	retq   
  4009f5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4009fc:	00 00 00 00 

0000000000400a00 <__libc_csu_fini>:
  400a00:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400a04 <_fini>:
  400a04:	48 83 ec 08          	sub    $0x8,%rsp
  400a08:	48 83 c4 08          	add    $0x8,%rsp
  400a0c:	c3                   	retq   
